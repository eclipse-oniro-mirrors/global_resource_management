# Copyright (c) 2022-2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("../../../../resmgr.gni")

resmgr_napi_core_source = [
  "src/resource_manager_addon.cpp",
  "src/resource_manager_napi_async_impl.cpp",
  "src/resource_manager_napi_context.cpp",
  "src/resource_manager_napi_sync_impl.cpp",
  "src/resource_manager_napi_utils.cpp",
]

config("resmgr_napi_core_public_config_all") {
  include_dirs = [
    "include",
    "../../../../dfx/hisysevent_adapter",
    "../../../../frameworks/resmgr/include",
  ]
}

config("resmgr_napi_core_public_config") {
  visibility = [ ":*" ]

  include_dirs = [
    "include",
    "../../../../frameworks/resmgr/include",
  ]
}

ohos_shared_library("resmgr_napi_core") {
  sources = resmgr_napi_core_source

  sources += [ "../../../../dfx/hisysevent_adapter/hisysevent_adapter.cpp" ]

  defines = [ "CONFIG_HILOG" ]

  version_script = "libresmgr_napi_core.versionscript"

  public_configs = [ ":resmgr_napi_core_public_config_all" ]

  deps = [ "../../../../frameworks/resmgr:global_resmgr" ]

  external_deps = [
    "ability_base:configuration",
    "ability_runtime:app_context",
    "ace_engine:drawable_descriptor",
    "bounds_checking_function:libsec_shared",
    "bundle_framework:appexecfwk_base",
    "cJSON:cjson",
    "c_utils:utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "ipc:ipc_single",
    "napi:ace_napi",
  ]

  if (resource_management_support_icu) {
    defines += [ "SUPPORT_GRAPHICS" ]
  }

  branch_protector_ret = "pac_ret"
  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  subsystem_name = "global"
  innerapi_tags = [ "platformsdk" ]
  part_name = "resource_management"
}

group("resmgr_napi_core_preview") {
  if (is_mingw || is_mac || is_linux) {
    public_deps = [ ":resmgr_napi_core_preview_inner" ]
  }
}

ohos_shared_library("resmgr_napi_core_preview_inner") {
  if (is_mingw || is_mac || is_linux) {
    output_name = "resmgr_napi_core_preview"
    defines = [ "__IDE_PREVIEW__" ]
    cflags = [
      "-std=c++17",
      "-Wno-ignored-attributes",
    ]

    sources = resmgr_napi_core_source

    public_configs = [
      ":resmgr_napi_core_public_config",
      "${ability_runtime_path}/frameworks/simulator/common:ability_simulator_common_config",
    ]

    if (resource_management_support_icu) {
      defines += [ "SUPPORT_GRAPHICS" ]
    }

    if (is_mingw) {
      defines += [
        "__WINNT__",
        "__EXPORT_MGR__",
      ]
      deps = [ "../../../../frameworks/resmgr:global_resmgr_win" ]
    } else if (is_mac) {
      deps = [ "../../../../frameworks/resmgr:global_resmgr_mac" ]
    } else if (is_linux) {
      defines += [ "__LINUX__" ]
      deps = [ "../../../../frameworks/resmgr:global_resmgr_linux" ]
    }

    external_deps = [
      "ace_engine:drawable_descriptor",
      "bounds_checking_function:libsec_shared",
      "cJSON:cjson_static",
      "graphic_2d:librender_service_client",
      "hilog:libhilog",
      "napi:ace_napi",
    ]
  }
  subsystem_name = "global"
  part_name = "resource_management"
}
